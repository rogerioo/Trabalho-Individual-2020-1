# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: CI-api

on:
  push:
    branches: [master]
    paths:
      - "api/**"
  pull_request:
    branches: [master]
    paths:
      - "api/**"

jobs:
  build_and_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build api docker
        run: docker-compose up -d api
        env:
          DB_HOST: localhost
      - name: Create db
        run: docker-compose run api rake db:create
      - name: Make migrations
        run: docker-compose run api rake db:migrate
      - name: Run tests
        run: docker-compose run api rake test
      - name: Upload code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: ./api/coverage/.resultset.json

  code_quality:
    needs: [build_and_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download code coverage results
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
          path: ./api/coverage/.resultset.json
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: api
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_API }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [build_and_tests, code_quality]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "api/"
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_SECRET}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag rogerioo/trabalho-individual-2020-1:api_latest

      - name: Docker Push
        run: docker push rogerioo/trabalho-individual-2020-1:api_latest
